import React, { useState } from 'react';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import CartPage from './CartPage'; // CartPage bileÅŸeni
import products from './data/products'; // ÃœrÃ¼n verilerini iÃ§e aktar
import './styles.css';

const App = () => {
    const [cart, setCart] = useState([]);
    const [selectedCategory, setSelectedCategory] = useState('');
    const [quantities, setQuantities] = useState({}); // ÃœrÃ¼n miktarlarÄ±
    const [balance, setBalance] = useState(22100); // Bakiye

    // Kategoriler
    const categories = [
        'KahvaltÄ±lÄ±k',
        'Ara Ã–ÄŸÃ¼n',
        'AkÅŸam YemeÄŸi',
        'AtÄ±ÅŸtÄ±rmalÄ±k',
        'Ä°Ã§ecekler'
    ];

    // Kategori seÃ§ildiÄŸinde filtreleme
    const filteredProducts = selectedCategory
        ? products.filter(product => product.category === selectedCategory)
        : products;

    // Sepete Ã¼rÃ¼n ekleme
    const addToCart = (product) => {
        const quantity = quantities[product.id] || 0; // VarsayÄ±lan miktar 0
        if (quantity === 0) return; // EÄŸer miktar 0 ise sepete eklenmesin

        const updatedCart = [...cart];

        // Sepette var olan Ã¼rÃ¼nÃ¼ bulup miktarÄ± artÄ±rma
        const existingProduct = updatedCart.find(item => item.id === product.id);
        if (existingProduct) {
            existingProduct.quantity += quantity; // EÄŸer Ã¼rÃ¼n zaten varsa, miktarÄ± artÄ±r
        } else {
            updatedCart.push({ ...product, quantity }); // Yeni Ã¼rÃ¼n ekle
        }

        setCart(updatedCart);
        setBalance(balance - product.price * quantity); // Bakiyeden dÃ¼ÅŸ
    };

    // MiktarÄ± artÄ±rma
    const increaseQuantity = (productId) => {
        setQuantities({
            ...quantities,
            [productId]: (quantities[productId] || 0) + 1, // BaÅŸlangÄ±Ã§ta 0'dan baÅŸlar
        });
    };

    // MiktarÄ± azaltma
    const decreaseQuantity = (productId) => {
        setQuantities({
            ...quantities,
            [productId]: Math.max((quantities[productId] || 0) - 1, 0), // BaÅŸlangÄ±Ã§ta 0'dan baÅŸlar, negatif olamaz
        });
    };

    return (
        <Router>
            <div className="app-container">
                <h1 className="font-bold text-3xl italic">ðŸ›’ Enflasyon Market ðŸ›’</h1>

                {/* YÃ¶nlendirme */}
                <Routes>
                    {/* ÃœrÃ¼nler SayfasÄ± */}
                    <Route path="/" element={
                        <div>
                            {/* Bakiye */}
                            <div className="balance">
                                <h2>Bakiye: {balance} TL</h2>
                            </div>

                            {/* Kategoriler ve Sepete Git Butonu */}
                            <div className="category-buttons">
                                {categories.map(category => (
                                    <button
                                        key={category}
                                        onClick={() => setSelectedCategory(category)}
                                        className={`category-btn ${selectedCategory === category ? 'active' : ''}`}
                                    >
                                        {category}
                                    </button>
                                ))}
                                <button onClick={() => setSelectedCategory('')} className="category-btn">
                                    TÃ¼mÃ¼
                                </button>

                                {/* Sepete Git Butonu */}
                                <Link to="/cart" className="go-to-cart-btn">
                                    Sepete Git
                                </Link>
                            </div>

                            {/* ÃœrÃ¼nler Listesi */}
                            <div className="products">
                                {filteredProducts.length > 0 ? (
                                    filteredProducts.map(product => (
                                        <div key={product.id} className="product-card">
                                            {/* ÃœrÃ¼n Resmi */}
                                            <img src={product.image} alt={product.name} className="product-image" />
                                            <h3>{product.name}</h3>
                                            <p>{product.category}</p>
                                            <p>Price: {product.price} â‚º</p>

                                            {/* Miktar KontrolÃ¼ */}
                                            <div className="quantity-controls">
                                                <button onClick={() => decreaseQuantity(product.id)}>-</button>
                                                <span>{quantities[product.id] || 0}</span> {/* BaÅŸlangÄ±Ã§ta 0 olacak */}
                                                <button onClick={() => increaseQuantity(product.id)}>+</button>
                                            </div>

                                            {/* Sepete Ekle Butonu */}
                                            <button onClick={() => addToCart(product)} className="add-to-cart-btn">
                                                Sepete Ekle
                                            </button>
                                        </div>
                                    ))
                                ) : (
                                    <p>Bu kategoriye ait Ã¼rÃ¼n bulunmamaktadÄ±r.</p>
                                )}
                            </div>
                        </div>
                    } />

                    {/* Sepet SayfasÄ± */}
                    <Route path="/cart" element={<CartPage cart={cart} balance={balance} />} />
                </Routes>
            </div>
        </Router>
    );
};

export default App;